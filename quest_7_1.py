# === quest_7_1.py ===
# Квест: 7.1 - Подготовка палитры (через сотворение)
# Цель: Создать свой собственный, чистый и стилистически единый набор
# изображений для обучения. Мы используем Духа-Демиурга, чтобы он сам
# нарисовал нам "учебник".

# --- Акт 1: Подготовка Гримуаров ---

# Призываем наш силовой гримуар PyTorch.
import torch
# Призываем "Диффузионный Конвейер" для магии творения.
from diffusers import DiffusionPipeline
# Призываем помощника 'os' для работы с папками.
import os
# Призываем "индикатор прогресса".
from tqdm import tqdm

# --- Акт 2: Подготовка "Сцены" ---

# Имя папки, куда мы будем складывать наши сотворенные "краски"-картины.
palette_folder = "generated_palette"
# Создаем папку, если ее еще нет.
os.makedirs(palette_folder, exist_ok=True)
# Указываем, сколько "учебных" картин мы хотим создать.
num_images = 15

# Сообщаем о начале ритуала.
print("Призываю Духа-Демиурга для создания нашей собственной палитры...")

# --- Акт 3: Призыв Демиурга в Режиме Экономии ---

# Призываем конвейер, используя уже знакомые нам руны экономии.
# Модель будет загружена из локального кэша, так как мы ее уже скачивали.
pipe = DiffusionPipeline.from_pretrained(
    "CompVis/stable-diffusion-v1-4", 
    # Загружаем модель сразу в "легком" 16-битном формате.
    torch_dtype=torch.float16
)
# Активируем ритуал "Призрачного Перемещения" для экономии VRAM.
pipe.enable_model_cpu_offload()

# --- Акт 4: Ритуал "Самосотворения" ---

# Создаем текстовое заклинание, которое описывает стиль, который мы хотим получить.
# Мы будем использовать этот же стиль для обучения нашей "Стилевой Печати".
style_prompt = "a beautiful painting of a landscape, trending on artstation, masterpiece, vibrant colors"

# Сообщаем о начале долгого процесса творения.
print(f"\nНачинаю творить {num_images} картин в стиле: '{style_prompt}'")

# Запускаем цикл, который повторится 'num_images' (15) раз.
# Мы "оборачиваем" его в tqdm, чтобы видеть общий прогресс.
for i in tqdm(range(num_images), desc="Сотворение палитры"):
    # Используем "защитное заклинание" try...except.
    # Если во время генерации одной из картин произойдет сбой,
    # ритуал не прервется, а просто сообщит об ошибке и перейдет к следующей.
    try:
        # Запускаем генерацию с нашим "стилевым" промптом.
        image = pipe(style_prompt).images[0]
        
        # Создаем уникальное имя для каждой картины.
        save_path = os.path.join(palette_folder, f"style_image_{i}.png")
        # Сохраняем сотворенный артефакт.
        image.save(save_path)
    except Exception as e:
        print(f"\nНе удалось сотворить картину #{i}. Ошибка: {e}")

# --- Акт 5: Завершение ---

# Сообщаем об успешном создании нашей "палитры".
print(f"\nРитуал завершен! Палитра из {num_images} сотворенных картин готова в папке '{palette_folder}'.")