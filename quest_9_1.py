# === quest_9_1.py ===
# Квест: 9.1 - Ручное заклинание градиента
# Цель: Понять фундаментальный принцип обучения нейросетей - обратное
# распространение ошибки - реализовав его вручную для простейшей модели.

# --- Акт 1: Подготовка к Ритуалу ---
import torch

# Наши "магические весы" должны научиться превращать 2 в 5.
# Это эталонная "гирька".
X = torch.tensor([2.0])
# Это "истинный вес", к которому мы стремимся.
Y = torch.tensor([5.0])

# "Ручки" на наших весах, изначально сбиты и установлены на ноль.
# w - "множитель", b - "смещение".
w = torch.tensor(
    [0.0], requires_grad=False
)  # requires_grad=False, так как мы считаем сами
b = torch.tensor([0.0], requires_grad=False)

# "Скорость обучения". Насколько сильно мы поворачиваем ручки за один раз.
learning_rate = 0.01

print("Начальная калибровка: w=0.0, b=0.0")
print("Цель: для входа 2.0 получить выход 5.0")
print("-" * 30)

# --- Акт 2: Ритуал Калибровки (15 итераций) ---

# Повторяем ритуал 15 раз, чтобы увидеть процесс в динамике.
for epoch in range(15):
    # --- Шаг 1: Прямой проход (Весы делают предсказание) ---
    # Формула наших весов: y = w * x + b
    y_predicted = w * X + b

    # --- Шаг 2: Измерение "Лжи" (Ошибка) ---
    # Мы измеряем, насколько предсказание далеко от истины.
    # (предсказание - истина)^2 - это "среднеквадратичная ошибка" (MSE).
    loss = (y_predicted - Y) ** 2

    # --- Шаг 3: Вычисление "Шепота Исправления" (Градиенты вручную) ---
    # Это самая суть. Мы вручную вычисляем производные.
    # "Шепот" для ручки 'w': насколько сильно 'w' повлияла на ошибку.
    grad_w = (2 * (y_predicted - Y) * X).item()
    # "Шепот" для ручки 'b': насколько сильно 'b' повлияла на ошибку.
    grad_b = (2 * (y_predicted - Y) * 1).item()

    # --- Шаг 4: Поворот "Ручек" (Обновление весов) ---
    # Мы поворачиваем ручки в ПРОТИВОПОЛОЖНУЮ сторону от "шепота" ошибки.
    # Чем сильнее "шепот", тем сильнее поворот. learning_rate контролирует силу.
    w -= learning_rate * grad_w
    b -= learning_rate * grad_b

    # --- Отчет о прогрессе ---
    print(
        f"Эпоха {epoch + 1}: Предсказание={y_predicted.item():.4f}, Ошибка={loss.item():.4f}, w={w.item():.4f}, b={b.item():.4f}"
    )

print("-" * 30)
print(f"Финальная калибровка: w={w.item():.4f}, b={b.item():.4f}")
print(f"Финальное предсказание для X=2.0: {(w * X + b).item():.4f}")
