# === quest_4_3.py ===
# Квест: 4.3 - Создание GIF-заклинания
# Цель: Освоить реконструкцию - сборку отдельных кадров в единый,
# анимированный артефакт (GIF). Это показывает, как можно
# визуализировать результаты видеоанализа.

# --- Акт 1: Подготовка Гримуаров ---

# Призываем помощника 'os' для работы с файлами и папками.
import os

# Призываем заклинание 'Image' из гримуара "Pillow" для работы с изображениями.
from PIL import Image

# --- Акт 2: Подготовка "Сцены" ---

# Указываем путь к папке, где лежат наши "карты-кадры", созданные в Квесте 4.1.
frames_folder = "frames"
print(f"Готовлюсь собрать 'Живую Картину' из кадров в папке: {frames_folder}")

# --- Акт 3: Сборка "Колоды" для Анимации ---

# Это мощное заклинание в одну строку (list comprehension) для поиска файлов.
# 1. os.listdir(frames_folder) - получаем список всех файлов в папке.
# 2. for f in ... if f.endswith('.jpg') - перебираем их и отбираем только те, что заканчиваются на .jpg.
# 3. os.path.join(frames_folder, f) - для каждого найденного файла создаем полный путь (например, 'frames/frame_0.jpg').
# 4. sorted(...) - ВАЖНО! Сортируем список путей, чтобы кадры шли в правильном порядке.
frame_files = sorted(
    [
        os.path.join(frames_folder, f)
        for f in os.listdir(frames_folder)
        if f.endswith(".jpg")
    ]
)

# Создаем пустую "магическую стопку" (список), куда мы загрузим сами изображения.
image_frames = []
# Запускаем цикл, который пройдет по каждому пути в нашем списке.
for frame_file in frame_files:
    # Image.open() - открывает файл с изображением.
    # .append() - добавляет открытое изображение в нашу "стопку".
    image_frames.append(Image.open(frame_file))

# Сообщаем, сколько "карт" было подготовлено для ритуала.
print(f"Собрано {len(image_frames)} кадров для анимации.")

# --- Акт 4: Ритуал "Оживления" ---

# Для создания GIF в Pillow мы берем первый кадр как "основу".
# image_frames[0] - означает "взять элемент с индексом 0" (самый первый).
first_frame = image_frames[0]

# Используем метод .save() нашего первого кадра, но с дополнительными "магическими рунами".
first_frame.save(
    # 1. 'animated_cat.gif' - Имя нашего будущего артефакта.
    "animated_cat.gif",
    # 2. format='GIF' - Явно указываем, что хотим создать артефакт в формате GIF.
    format="GIF",
    # 3. append_images=image_frames[1:] - КЛЮЧЕВАЯ РУНА! Мы "приклеиваем" к первому кадру
    #    все остальные. image_frames[1:] - означает "взять все элементы из списка, начиная со второго".
    append_images=image_frames[1:],
    # 4. save_all=True - Подтверждаем: "Да, сохрани все 'приклеенные' кадры, а не только первый".
    save_all=True,
    # 5. duration=200 - Устанавливаем время показа одного кадра в миллисекундах (200мс = 1/5 секунды).
    duration=200,
    # 6. loop=0 - Устанавливаем количество повторений. 0 - это специальное значение, означающее "зациклить навечно".
    loop=0,
)

# --- Акт 5: Завершение ---

# Сообщаем об успешном создании нашего "живого" артефакта.
print("\nМагия свершилась! 'Живая Картина' сохранена в файл 'animated_cat.gif'")
