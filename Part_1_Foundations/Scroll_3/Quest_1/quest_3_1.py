# === quest_3_1.py ===
# Имя этого священного пергамента, которое будет занесено в Летопись.
# Квест: 3.1 - Призыв "Всевидящего Ока"
# Официальное название Квеста, как оно записано в Великом Кодексе.
# Цель: Познакомиться с магией Компьютерного Зрения (Computer Vision).
# Здесь изложена главная цель нашего ритуала.
# Мы призовем "духа", способного распознавать объекты на изображениях,
# и проведем простой ритуал классификации.
# А здесь — описание шагов, которые приведут нас к этой цели.

# --- Акт 1: Подготовка Гримуаров ---
# Мы начинаем первый магический акт: призыв знаний и инструментов из великих библиотек.

# Из библиотеки `datasets` мы призываем заклинание `load_dataset`, нашего "Библиотекаря",
# который умеет безопасно и эффективно призывать архивы с данными для обучения и тестов.
from datasets import load_dataset

# Из библиотеки `transformers` мы снова призываем `pipeline` — наш универсальный "амулет",
# который скрывает сложность ритуалов и позволяет нам легко повелевать Големами и Духами.
from transformers import pipeline

# --- Акт 2: Призыв Магического Образа ---
# Начинается второй акт: мы материализуем объект для нашего исследования — изображение.

# Мы оглашаем на кристалл (консоль) начало ритуала, указывая на источник магии.
print("Открываю портал в 'Вечный Сад Образов' (CIFAR-10)...")
# Мы произносим заклинание `load_dataset` для призыва архива 'cifar10'.
# CIFAR-10 — это древний и почитаемый архив образов, идеально подходящий для первых шагов.
# Мы используем `streaming=True` — руну экономии маны, чтобы не скачивать весь архив, а лишь открыть к нему "поток".
dataset = load_dataset("cifar10", split="train", streaming=True, trust_remote_code=True)
# Заклинанием `next(iter(dataset))` мы извлекаем из потока самый первый попавшийся образец.
sample = next(iter(dataset))

# Призванный 'образец' (`sample`) — это контейнер. Нас интересует его содержимое под ключом 'img',
# где и хранится сам магический образ, готовый к анализу.
image_to_analyze = sample["img"]

# Сообщаем об успешном завершении ритуала призыва.
print("Магический образ успешно призван!")

# Это дополнительный, но важный шаг для самопроверки — признак мудрого Мага.
# Мы заглядываем в "летописи" архива, чтобы узнать "истинную суть" образа.
# `sample['label']` содержит числовой идентификатор класса (например, 6).
# `dataset.info.features['label'].int2str(...)` — это заклинание, которое переводит это число в понятное слово (например, 'frog').
true_label = dataset.info.features["label"].int2str(sample["label"])
# Мы выводим на кристалл эту "истинную суть", чтобы позже сравнить её с вердиктом нашего Духа.
print(f"(Истинная суть образа, как говорят хроники: {true_label})")

# --- Акт 3: Ритуал Распознавания ---
# Третий, кульминационный акт: мы призываем Духа и просим его проанализировать образ.

# Оглашаем призыв нашего "Всевидящего Ока". При первом запуске скрипта Дух будет скачан из астрала.
print("\nПризываю 'Всевидящего Око'...")
# Мы создаем "амулет" pipeline, настроенный на новую для нас задачу.
# 1. "image-classification" — имя задачи, которую мы поручаем амулету.
# 2. model="google/mobilenet_v2_1.0_224" — имя призываемого Духа. MobileNetV2 — это быстрый и легкий дух,
#    идеально подходящий для нашего аппаратного Кристалла Маны (GPU), так как не требует огромных ресурсов.
vision_spirit = pipeline("image-classification", model="google/mobilenet_v2_1.0_224")

# Сообщаем о начале анализа — моменте, когда Дух обращает свой взор на образ.
print("\nДух всматривается в образ...")
# Мы "скармливаем" наш призванный образ `image_to_analyze` амулету `vision_spirit`.
# В этот момент амулет сам выполняет всю черновую работу: подгоняет размер образа,
# нормализует цвета и передает его Духу в понятном для него виде.
result = vision_spirit(image_to_analyze)

# --- Акт 4: Демонстрация Результата ---
# Финальный акт: мы выслушиваем и записываем вердикт призванного нами Духа.

# Выводим на кристалл заголовок для нашего финального откровения.
print("\nВердикт 'Всевидящего Ока':")
# Мы печатаем `result`. Это будет список предсказаний, каждое из которых содержит
# "имя" класса, которое увидел Дух, и его "уверенность" (`score`) в этом. Мы можем
# сравнить самый уверенный вердикт с "истинной сутью", которую узнали в Акте 2.
print(result)
