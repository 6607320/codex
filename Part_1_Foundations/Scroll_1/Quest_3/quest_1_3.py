# === quest_1_3.py ===
# Квест: 1.3 - Первый Призыв — Дух Эмоций
# Цель: Познакомиться с самым простым и высокоуровневым способом использования AI-моделей.
# Мы используем "амулет" pipeline, который прячет всю сложность "под капот".

# --- Акт 1: Подготовка Гримуара ---

# Призываем из гримуара "transformers" наш самый универсальный инструмент - "pipeline".
# Pipeline (конвейер) - это готовая "сборка", которая сама заботится о токенизации,
# передаче данных в модель и интерпретации результата.
from transformers import pipeline

# --- Акт 2: Призыв и Настройка "Амулета" ---

# Сообщаем о начале ритуала. При первом запуске будет скачиваться модель.
print("Призываю Духа Эмоций... Это может занять минуту.")

# Создаем наш "амулет" (объект pipeline).
# Мы передаем ему две инструкции:
# 1. "sentiment-analysis" - Название задачи. Мы хотим "анализировать тональность".
#    Pipeline сам знает, какие модели подходят для этой задачи.
# 2. model="..." - Имя конкретного "духа" (модели), которого мы хотим призвать.
#    "distilbert-base-uncased-finetuned-sst-2-english" - это быстрый и эффективный дух,
# дообученный специально для определения, является ли английский текст
# позитивным или негативным.
spirit_of_emotion = pipeline(
    "sentiment-analysis",
    model="distilbert-base-uncased-finetuned-sst-2-english",
)

# --- Акт 3: Ритуал Анализа ---

# Создаем переменную-строку с текстом, который мы хотим проанализировать.
my_phrase = "Я готов к этому волшебному путешествию!"

# Выводим в консоль фразу, чтобы было понятно, с чем мы работаем.
print(f"Анализирую фразу: '{my_phrase}'")

# Это и есть само магическое действие!
# Мы "скармливаем" нашу фразу (my_phrase) нашему "амулету" (spirit_of_emotion).
# "Амулет" сам выполняет все скрытые шаги: токенизацию, передачу в модель и т.д.
# Результат его работы мы сохраняем в переменную 'result'.
result = spirit_of_emotion(my_phrase)

# --- Акт 4: Демонстрация Результата ---

# Выводим заголовок для нашего результата.
print("Вердикт Духа:")
# Выводим содержимое переменной 'result'.
# Это будет список словарей, где указана метка ('POSITIVE'/'NEGATIVE') и
# уверенность ('score').
print(result)
