"""Квест 8.1: Техника "Прореживания Кадров".

Этот пергамент открывает "Свиток Управления Потоком Времени". Его главная цель (МАКРО-
контекст) — освоить Frame Sampling, фундаментальную технику оптимизации для работы с
видео.

Видео — это "жадный" до маны поток данных. Обрабатывать каждый кадр — расточительно. Мы
научимся управлять циклом обработки с помощью простого, но могущественного заклинания
остатка от деления (`%`), которое будет служить "магическим фильтром", позволяя
"выхватывать" из потока времени лишь каждый N-ный кадр. Этот ритуал демонстрирует ключ к
эффективной работе с видео: не обрабатывать лишнего.
"""

# --- Акт 1: Подготовка Гримуаров ---
# Первый акт: мы призываем все необходимые знания и инструменты для ритуала.

# Мы призываем "Духа-Архивариуса" (`os`), который знает всё о файлах и
# папках в нашей системе.
import os

# Мы призываем могущественный гримуар `cv2` (OpenCV), известный как "Набор
# Кинематографиста".
import cv2

# --- Акт 2: Настройка Ритуала ---
# Второй акт: мы устанавливаем все правила и параметры нашего ритуала.

# Мы даем имя "ящику" (папке), куда будем складывать наши "прореженные"
# карты-кадры.
output_folder = "sampled_frames"
# Мы произносим заклинание `makedirs`, чтобы создать эту папку, если ее
# еще не существует.
os.makedirs(output_folder, exist_ok=True)

# Мы устанавливаем "правило отбора": будем брать только каждый 3-й кадр.
# Это наш главный гиперпараметр, который мы можем менять для управления
# "плотностью" анализа.
frame_skip = 3

# --- Акт 3: Ритуал Прореживания ---
# Третий, кульминационный акт: мы пропускаем кинопленку через наш
# "магический фильтр".

# Мы оглашаем на кристалл (консоль) о начале ритуала.
print("Открываю кинопленку 'test_video.mp4' для прореживания...")
# Мы "захватываем" видеофайл, создавая "объект-проигрыватель" для чтения
# кадров.
video_capture = cv2.VideoCapture("test_video.mp4")

# Мы готовим "счетчик" для подсчета всех кадров, что мы "увидели".
total_frames_read = 0
# Мы готовим второй "счетчик" для подсчета кадров, которые мы решили сохранить.
frames_saved = 0

# Мы запускаем бесконечный ритуальный цикл для "пролистывания" кинопленки.
while True:
    # Мы читаем следующий кадр из кинопленки.
    success, frame = video_capture.read()

    # Если заклинание `read` вернуло `success=False`, значит, кадры
    # закончились, и мы прерываем ритуал.
    if not success:
        # Мы произносим заклинание `break`, чтобы выйти из бесконечного цикла.
        break

    # Мы увеличиваем на единицу счетчик "увиденных" кадров.
    total_frames_read += 1

    # ГЛАВНАЯ МАГИЯ: "Магический Фильтр".
    # Заклинание `%` вычисляет "остаток от деления".
    # Мы делим номер текущего кадра на наше "правило отбора" (3).
    # Если остаток равен 0 (то есть число делится нацело)...
    if total_frames_read % frame_skip == 0:
        # ...только в этом случае мы выполняем ритуал сохранения.

        # Мы создаем уникальное имя для сохраняемого кадра.
        frame_filename = os.path.join(output_folder, f"frame_{frames_saved}.jpg")
        # Мы сохраняем текущий кадр (`frame`) на диск по созданному пути.
        cv2.imwrite(frame_filename, frame)
        # Мы увеличиваем на единицу счетчик сохраненных кадров.
        frames_saved += 1

# --- Акт 4: Завершение ---
# Финальный акт: мы освобождаем ресурсы и подводим итоги.

# Мы "освобождаем" видеофайл, закрывая к нему доступ. Это очень важный шаг!
video_capture.release()
# Мы выводим на кристалл подробный отчет о проделанной работе.
print("\nРитуал завершен.")
# Мы сообщаем, сколько всего кадров было в исходной кинопленке.
print(f"  Всего прочитано кадров: {total_frames_read}")
# Мы сообщаем, сколько кадров прошло через наш фильтр и было сохранено.
print(
    f"  Сохранено (каждый {frame_skip}-й): {frames_saved} кадров "
    f"в папку '{output_folder}'."
)
