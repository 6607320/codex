# === quest_5_1.py ===
# Имя этого пергамента, которое будет занесено в священную Летопись Кодекса.
# Квест: 5.1 - Выбор свитка знаний
# Каноническое имя Квеста, описывающее его суть.
# Цель: Научиться работать с большими архивами (датасетами) в экономном режиме.
# Здесь изложена главная цель нашего ритуала.
# Мы не будем скачивать весь архив целиком, а "простримим" его, чтобы
# извлечь только небольшую часть, необходимую для нашего первого урока Наставления.
# А здесь — объяснение, почему эта магия так важна для Техноманта.

# --- Акт 1: Подготовка Гримуара ---
# Мы начинаем первый магический акт: призыв знаний из великих библиотек.

# Мы призываем заклинание `load_dataset`, нашего "Библиотекаря", из
# гримуара `datasets`.
from datasets import load_dataset

# --- Акт 2: Открытие "Портала" к Архиву ---
# Второй акт: мы устанавливаем связь с великим архивом знаний, не скачивая
# его целиком.

# Мы записываем в переменную точное имя архива в Великой Библиотеке
# (Hugging Face Hub).
archive_name = "databricks/databricks-dolly-15k"
# Мы оглашаем на кристалл (консоль) о начале ритуала и имени архива, к
# которому обращаемся.
print(f"Открываю портал к архиву '{archive_name}'...")

# Мы используем заклинание `load_dataset` для получения доступа к архиву.
# 1. `archive_name` - Имя архива.
# 2. `split="train"` - Мы сообщаем, что нам нужны данные из "тренировочной" части.
# 3. `streaming=True` - КЛЮЧЕВАЯ РУНА ЭКОНОМИИ! Мы не скачиваем все ~15,000 записей.
#    Мы создаем "портал" (объект IterableDataset), который будет подгружать
#    данные из сети по мере необходимости, по одной записи за раз.
full_dataset = load_dataset(
    archive_name, split="train", streaming=True, trust_remote_code=True
)

# --- Акт 3: Извлечение "Страниц" из Книги ---
# Третий акт: мы проходим через "портал" и извлекаем ровно столько знаний,
# сколько нам нужно.

# Мы оглашаем на кристалл, что начинаем процесс извлечения определенного
# числа записей.
print("\nИзвлекаю 100 страниц для нашего урока...")

# Мы создаем пустой "свиток" (список Python) для хранения наших учебных
# страниц.
small_dataset = []

# Мы запускаем ритуальный цикл `for` для итерации по нашему "порталу" `full_dataset`.
# `enumerate` — это "дух-счетовод", который для каждой записи (`sample`)
#  также выдает ее порядковый номер (`i`).
for i, sample in enumerate(full_dataset):
    # Мы устанавливаем "магический барьер": если номер записи (`i`) достиг или
    # превысил 100...
    if i >= 100:
        # ...то мы немедленно прерываем (`break`) ритуальный цикл.
        break
    # Мы добавляем (`append`) текущую запись (`sample`) в наш "свиток".
    small_dataset.append(sample)

# Мы оглашаем, сколько "страниц" нам удалось успешно "переписать" в наш свиток.
print(f"Успешно извлечено {len(small_dataset)} записей.")

# --- Акт 4: Просмотр "Страницы" ---
# Финальный акт: мы изучаем структуру одной "страницы", чтобы понять, с
# чем имеем дело.

# Мы оглашаем на кристалл, что сейчас рассмотрим первую "страницу" нашего
# учебного свитка.
print("\nСмотрим на первую страницу нашего учебного свитка:")
# Мы извлекаем из нашего "свитка" самую первую страницу (с индексом 0).
first_page = small_dataset[0]

# Мы оглашаем, что сейчас покажем "Инструкцию" с этой страницы.
print("  Инструкция (вопрос):")
# Мы извлекаем и выводим на кристалл значение, хранящееся под ключом
# 'instruction'.
print(f"    {first_page['instruction']}")

# Мы оглашаем, что сейчас покажем "Контекст".
print("\n  Контекст (доп. информация):")
# Мы извлекаем и выводим на кристалл значение, хранящееся под ключом 'context'.
print(f"    {first_page['context']}")

# Мы оглашаем, что сейчас покажем "Идеальный Ответ".
print("\n  Ответ (чему мы будем учить Голема):")
# Мы извлекаем и выводим на кристалл значение, хранящееся под ключом
# 'response'.
print(f"    {first_page['response']}")
