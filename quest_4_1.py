# === quest_4_1.py ===
# Квест: 4.1 - Разбор видео на кадры
# Цель: Освоить базовую магию работы с видео - деконструкцию.
# Мы научимся "разбирать" видеопоток на отдельные статичные изображения (кадры),
# что является первым шагом для любого видеоанализа.

# --- Акт 1: Подготовка Гримуаров ---

# Призываем "Набор Кинематографиста" (OpenCV) - наш главный инструмент для этого свитка.
import cv2
# Призываем помощника 'os' для работы с папками и файлами.
import os

# --- Акт 2: Подготовка "Сцены" ---

# Задаем имя папки, куда мы будем складывать наши "выхваченные" кадры.
output_folder = 'frames'
# Заклинание проверки: "Если (`if`) папка с таким именем НЕ (`not`) существует...".
if not os.path.exists(output_folder):
    # "...тогда создай (`makedirs`) ее". Это защищает нас от ошибок при повторном запуске.
    os.makedirs(output_folder)

# --- Акт 3: Ритуал Разбора Кинопленки ---

# Сообщаем о начале ритуала.
print("Открываю кинопленку 'test_video.mp4'...")
# cv2.VideoCapture - это заклинание, которое "захватывает" видео.
# Оно не загружает все видео в память, а создает "объект-проигрыватель",
# который умеет читать из файла кадр за кадром.
video_capture = cv2.VideoCapture('test_video.mp4')

# Готовим "счетчик", чтобы давать каждому кадру уникальный номер.
frame_count = 0
# `while True:` - это заклинание "бесконечного цикла". Он будет повторяться
# снова и снова, пока мы не дадим ему команду остановиться (`break`).
while True:
    # video_capture.read() - это команда "прочитай следующий кадр!".
    # Она возвращает две вещи:
    # 1. `success`: Флаг (True/False), который говорит, удалось ли прочитать кадр.
    # 2. `frame`: Сам кадр (в виде numpy-массива), если чтение было успешным.
    success, frame = video_capture.read()
    
    # Проверяем флаг. Если `success` равен `False` (то есть `not success` - `True`)...
    if not success:
        # ...это значит, что кадры в видео закончились. Пора остановить цикл.
        break
        
    # os.path.join - это умное заклинание, которое правильно "склеивает"
    # имя папки и имя файла, создавая полный путь. f"..." - позволяет вставить
    # номер `frame_count` прямо в имя файла.
    frame_filename = os.path.join(output_folder, f"frame_{frame_count}.jpg")
    
    # cv2.imwrite - заклинание "записать образ". Оно берет кадр (`frame`)
    # и сохраняет его на диск по указанному пути (`frame_filename`).
    cv2.imwrite(frame_filename, frame)
    
    # Увеличиваем наш счетчик на 1, чтобы следующий кадр получил новый номер.
    frame_count += 1

# --- Акт 4: Завершение ---

# video_capture.release() - важное заклинание, которое "освобождает" видеофайл,
# сообщая системе, что мы закончили с ним работать.
video_capture.release()
# Выводим итоговый отчет о проделанной работе.
print(f"Ритуал завершен. {frame_count} кадров было извлечено и сохранено в папку 'frames'.")