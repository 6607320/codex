# === quest_18_1.py (Истинная Финальная Версия) ===
# Квест: 18.1 - Призыв Химеры
# Цель: Использовать YOLOv5 для детекции объектов на видеофайле, "прочитать"
# результаты и вручную нарисовать их на кадрах для сохранения.

# --- Акт 1: Подготовка Гримуаров ---
# Призываем наш силовой гримуар PyTorch.
import torch
# Призываем "Набор Кинематографиста" для работы с видео и рисования.
import cv2
# Призываем помощника 'os' для работы с папками.
import os
# Призываем "индикатор прогресса" для наглядности.
from tqdm import tqdm

# --- Акт 2: Ритуал Пробуждения и Настройки Химеры ---
print("Пробуждаю 'Сторожевую Химеру' (YOLOv5)...")
# torch.hub.load() - призывает артефакт 'yolov5n' из хранилища 'ultralytics/yolov5'.
model = torch.hub.load('ultralytics/yolov5', 'yolov5n', pretrained=True)

# --- КЛЮЧЕВАЯ РУНА НАСТРОЙКИ ---
# model.conf - это "характер" Химеры, ее "порог уверенности".
# Мы снижаем его до 0.10 (10%), чтобы она сообщала даже о неуверенных находках.
model.conf = 0.10

# Отправляем Химеру на Кристалл Маны, если он доступен.
if torch.cuda.is_available():
    model = model.to('cuda')
print("Химера пробудилась и готова к охоте!")

# --- Акт 3: Подготовка к "Слепой Охоте" ---
print("\nПодключаюсь к 'Магической Кинопленке'...")
# "Захватываем" наш видеофайл.
cap = cv2.VideoCapture('test_video.mp4')

# Создаем папку для сохранения "трофеев".
output_folder = "hunt_results"
os.makedirs(output_folder, exist_ok=True)
# Готовим счетчик для нумерации сохраненных кадров.
frame_count = 0
# Узнаем общее число кадров для нашего индикатора.
total_frames = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))

# --- Акт 4: Ритуал "Слепой Охоты" с "Явными Чернилами" ---
print("Начинаю 'Слепую Охоту'...")

# Запускаем цикл, обернутый в "индикатор прогресса".
for _ in tqdm(range(total_frames), desc="Охота на кинопленке"):
    # Читаем следующий кадр.
    success, frame = cap.read()
    # Если кадры закончились, прерываем ритуал.
    if not success:
        break

    # "Скармливаем" кадр Химере.
    results = model(frame)
    
    # --- Ритуал "Явных Чернил" ---
    # `results.xyxy[0]` - это "отчет" Химеры. Мы перебираем каждую "строку" в этом отчете.
    for *box, conf, cls in results.xyxy[0]:
        # `model.names[int(cls)]` - заглядываем в "паспорт" Химеры, чтобы узнать имя класса.
        # `f"{...} {conf:.2f}"` - создаем красивую подпись, например "cat 0.52".
        label = f"{model.names[int(cls)]} {conf:.2f}"
        
        # `map(int, box)` - превращаем координаты из дробных в целые.
        x1, y1, x2, y2 = map(int, box)
        
        # `cv2.rectangle` - заклинание, рисующее прямоугольник на `frame`.
        # Цвет (0, 255, 0) - это чистый зеленый в формате BGR.
        cv2.rectangle(frame, (x1, y1), (x2, y2), (0, 255, 0), 2)
        
        # `cv2.putText` - заклинание, которое пишет текст на `frame`.
        # Цвет (0, 255, 0) - также чистый зеленый.
        cv2.putText(frame, label, (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)
    
    # Сохраняем уже измененный, "разрисованный" кадр.
    save_path = os.path.join(output_folder, f"result_frame_{frame_count}.jpg")
    cv2.imwrite(save_path, frame)
    
    # Увеличиваем счетчик.
    frame_count += 1

# --- Акт 5: Завершение Ритуала ---
# "Освобождаем" кинопленку.
cap.release()
print(f"\nРитуал завершен. {frame_count} помеченных кадров сохранено в папку '{output_folder}'.")