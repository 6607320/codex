# === quest_18_1.py (Истинная Финальная Версия) ===
# Имя этого пергамента, хранящего финальную, исправленную версию ритуала.
# Квест: 18.1 - Призыв Химеры
# Каноническое имя Квеста, как оно записано в Великом Кодексе.
# Цель: Использовать YOLOv5 для детекции объектов на видеофайле, "прочитать"
# Священная цель нашего ритуала.
# результаты и вручную нарисовать их на кадрах для сохранения.
# Детальное описание цели.

# Мы призываем "Духа-Архивариуса" (`os`) для работы с папками.
import os

# Мы призываем "Набор Кинематографиста" (`cv2`) для работы с видео и рисования.
import cv2

# --- Акт 1: Подготовка Гримуаров ---
# Начинается первый акт: мы призываем все необходимые знания и инструменты.
# Мы призываем наш главный силовой гримуар `PyTorch`.
import torch

# Мы призываем наш "индикатор прогресса" (`tqdm`).
from tqdm import tqdm

# --- Акт 2: Ритуал Пробуждения и Настройки Химеры ---
# Начинается второй акт: мы пробуждаем нашего духа-охотника.
# Мы оглашаем на кристалл (консоль) о начале ритуала.
print("Пробуждаю 'Сторожевую Химеру' (YOLOv5)...")
# `torch.hub.load()` — призывает артефакт 'yolov5n' из хранилища 'ultralytics/yolov5'.
model = torch.hub.load("ultralytics/yolov5", "yolov5n", pretrained=True)

# --- КЛЮЧЕВАЯ РУНА НАСТРОЙКИ ---
# `model.conf` — это "характер" Химеры, ее "порог уверенности".
# Мы снижаем его до 0.10 (10%), чтобы она сообщала даже о неуверенных находках.
model.conf = 0.10

# Мы проверяем, доступен ли нам Кристалл Маны (GPU).
if torch.cuda.is_available():
    # Если да, мы отправляем Химеру на Кристалл Маны для быстрой работы.
    model = model.to("cuda")
# Мы оглашаем, что Химера готова.
print("Химера пробудилась и готова к охоте!")

# --- Акт 3: Подготовка к "Слепой Охоте" ---
# Начинается третий акт: мы готовим "охотничьи угодья".
# Мы оглашаем, что подключаемся к "кинопленке".
print("\nПодключаюсь к 'Магической Кинопленке'...")
# Мы "захватываем" наш видеофайл, создавая "объект-проигрыватель".
cap = cv2.VideoCapture("test_video.mp4")

# Мы создаем папку для сохранения "трофеев" (кадров с результатами).
output_folder = "hunt_results"
# Мы произносим заклинание, чтобы создать эту папку, если ее еще нет.
os.makedirs(output_folder, exist_ok=True)
# Мы готовим счетчик для нумерации сохраненных кадров.
frame_count = 0
# Мы узнаем общее число кадров в кинопленке для нашего индикатора прогресса.
total_frames = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))

# --- Акт 4: Ритуал "Слепой Охоты" с "Явными Чернилами" ---
# Начинается четвертый, кульминационный акт: мы начинаем охоту.
# Мы оглашаем о начале "Слепой Охоты".
print("Начинаю 'Слепую Охоту'...")

# Мы запускаем ритуальный цикл, обернутый в "индикатор прогресса".
for _ in tqdm(range(total_frames), desc="Охота на кинопленке"):
    # Мы читаем следующий кадр из кинопленки.
    success, frame = cap.read()
    # Если `success=False`, значит, кадры закончились, и мы прерываем ритуал.
    if not success:
        # Мы произносим заклинание `break`.
        break

    # Мы "скармливаем" текущий кадр Химере.
    results = model(frame)

    # --- Ритуал "Явных Чернил" ---
    # `results.xyxy[0]` — это "отчет" Химеры. Мы перебираем каждую "строку" (найденный объект) в этом отчете.
    for *box, conf, cls in results.xyxy[0]:
        # `model.names[int(cls)]` — мы заглядываем в "паспорт" Химеры, чтобы узнать имя класса по его номеру.
        # `f"{...} {conf:.2f}"` — мы создаем красивую подпись, например "cat 0.52".
        label = f"{model.names[int(cls)]} {conf:.2f}"

        # `map(int, box)` — мы превращаем координаты рамки из дробных в целые.
        x1, y1, x2, y2 = map(int, box)

        # `cv2.rectangle` — это заклинание, рисующее прямоугольник на кадре `frame`.
        # Цвет `(0, 255, 0)` — это чистый зеленый в формате BGR.
        cv2.rectangle(frame, (x1, y1), (x2, y2), (0, 255, 0), 2)

        # `cv2.putText` — это заклинание, которое пишет текст на кадре `frame`.
        # Цвет `(0, 255, 0)` — также чистый зеленый.
        cv2.putText(
            # На каком кадре рисовать.
            frame,
            # Какой текст писать.
            label,
            # Где начинать писать (чуть выше левого верхнего угла рамки).
            (x1, y1 - 10),
            # Какой шрифт использовать.
            cv2.FONT_HERSHEY_SIMPLEX,
            # Размер шрифта.
            0.5,
            # Цвет шрифта.
            (0, 255, 0),
            # Толщина шрифта.
            2,
        )

    # Мы сохраняем уже измененный, "разрисованный" кадр.
    save_path = os.path.join(output_folder, f"result_frame_{frame_count}.jpg")
    # Мы произносим заклинание сохранения.
    cv2.imwrite(save_path, frame)

    # Мы увеличиваем счетчик сохраненных кадров.
    frame_count += 1

# --- Акт 5: Завершение Ритуала ---
# Начинается финальный акт: мы освобождаем ресурсы и подводим итоги.
# Мы "освобождаем" кинопленку.
cap.release()
# Мы оглашаем, что ритуал завершен, и сообщаем, сколько "трофеев" было сохранено.
print(
    f"\nРитуал завершен. {frame_count} помеченных кадров сохранено в папку '{output_folder}'."
)
