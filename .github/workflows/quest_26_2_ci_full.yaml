# Это имя нашего автоматизированного ритуала. Именно оно будет отображаться в летописях GitHub (во вкладке "Actions"),
# позволяя нам с первого взгляда понять, какая именно магия была приведена в действие.
name: Ритуал Проверки Чистоты и Истинности

# "Заклинание Пробуждения". Эта строка указывает, когда Стражу следует пробудиться.
# [push] означает, что ритуал будет запускаться каждый раз, когда ты или кто-либо другой
# вносит новые знания (совершает 'push') в любую из ветвей нашей священной Летописи (репозитория).
on:
  push:
    paths:
      - 'Part_4_Engineering/Scroll_26/Quest_2/**'
  pull_request:
    paths:
      - 'Part_4_Engineering/Scroll_26/Quest_2/**'

# "Скрижаль Полномочий", предписанная Каноном Наименьших Привилегий.
# Усмиряет Инквизитора CodeQL, даруя Стражу лишь право на чтение.
permissions:
  contents: read

# "Скрижаль Заданий". Здесь начинается перечень великих дел, которые должен совершить Страж.
# Каждый ритуал может состоять из одного или нескольких таких заданий (jobs).
jobs:
  # Уникальное имя этого конкретного задания. Мы назвали его 'lint-and-test',
  # чтобы сразу было ясно: здесь происходит и проверка чистоты (lint), и испытание (test).
  # Это имя используется для внутренней идентификации задания в системе.
  lint-and-test:
    # "Алтарь для Ритуала". Мы указываем, в каком магическом окружении (операционной системе)
    # будет проводиться ритуал. 'ubuntu-latest' — это надежный и универсальный мир,
    # где наш Страж будет обладать всеми необходимыми базовыми силами.
    runs-on: ubuntu-latest

    # "Шаги Ритуала". Это сердце нашего заклинания — точная последовательность действий,
    # которые Страж выполнит одно за другим.
    steps:
      # Шаг 1: "Призыв Летописи".
      # Этот шаг дает Стражу доступ к нашему коду.
      - name: 1. Призыв Летописи (Checkout Code)
        # Мы используем 'actions/checkout@v4' — могущественное, заранее созданное заклинание (GitHub Action),
        # которое материализует на Алтаре точную копию нашей Летописи (репозитория).
        uses: actions/checkout@v4

      # Шаг 2: "Создание Магического Круга Python".
      # Здесь мы готовим среду для нашей магии Python.
      - name: 2. Создание Магического Круга (Set up Python)
        # Снова используем готовое заклинание 'actions/setup-python@v5',
        # которое чертит на Алтаре магический круг, готовый к работе с Python.
        uses: actions/setup-python@v5
        # Параметр заклинания. Мы уточняем, что нам нужна сила Python именно версии '3.10'.
        with:
          python-version: '3.10'

      # Шаг 3: "Призыв Инструментов".
      # Прежде чем проверять код, Стражу нужны его магические инструменты.
      - name: 3. Призыв Инструментов (Install Dependencies)
        # 'run:' — это команда прямого действия. Страж выполнит следующие строки как заклинания в своей командной строке.
        # Символ '|' позволяет нам перечислить несколько заклинаний подряд.
        run: |
          # Призываем духа 'pip' для установки 'flake8' — нашего Стража Чистоты Кода.
          pip install flake8
          # Призываем духа 'pip' для установки 'pytest' — нашего Инквизитора Истинности.
          pip install pytest

      # Шаг 4: "Проверка Чистоты Рун".
      # Первый этап проверки: убеждаемся, что код написан по канонам.
      - name: 4. Проверка Чистоты (Lint with flake8)
        # Прямой приказ: запустить 'flake8', ограничив его взор ТОЛЬКО
        # владениями этого Квеста. Это обеспечивает модульность ритуала.
        run: flake8 ./Part_4_Engineering/Scroll_26/Quest_2/

      # Шаг 5: НОВЫЙ РИТУАЛ — "Испытание Истинности".
      # Самый важный новый шаг. Теперь мы проверяем, работает ли наша магия так, как задумано.
      - name: 5. Испытание Истинности (Test with pytest)
        # Прямой приказ: запустить 'pytest', приказав ему искать и исполнять
        # тестовые ритуалы ТОЛЬКО внутри владений этого Квеста.
        run: pytest ./Part_4_Engineering/Scroll_26/Quest_2/
        