# === quest_10_1.py ===
# Квест: 10.1 - Создание руны "Свертки"
# Цель: Понять механику свертки (convolution), реализовав ее вручную.
# Это фундаментальный "строительный блок" всех сетей Компьютерного Зрения (CNN).

# --- Легенда: Аналогия с "Фонарем и Трафаретом" ---
# 1. Образ - это темная комната, которую нужно исследовать.
# 2. Ядро (kernel) - это "трафарет" на нашем фонаре, ищущий определенный узор.
# 3. Свертка - это процесс сканирования комнаты лучом фонаря.
# 4. Карта Признаков (feature map) - это карта комнаты, где отмечены места,
#    где фонарь вспыхнул, найдя нужный узор.

import cv2
import numpy as np

# --- Акт 1: Создание "Комнаты" (Тестовый Образ) ---
print("Создаю тестовый образ с вертикальной линией...")
# Создаем простой черно-белый образ 7x7 пикселей.
# 0 - черный, 255 - белый.
image = np.zeros((7, 7), dtype=np.uint8)
# Рисуем в центре яркую вертикальную линию.
image[:, 3] = 255
cv2.imwrite("original_line.png", image)
print("  -> Оригинальный образ сохранен в 'original_line.png'")

# --- Акт 2: Ковка "Магического Трафарета" (Ядро) ---
print("\nВыковываю 'трафарет' для поиска вертикальных линий...")
# Это ядро (фильтр Собеля) специально создано для поиска вертикальных границ.
# -1 слева и +1 справа: он будет "вспыхивать" (давать большое значение),
# когда слева от центра темно, а справа - светло.
kernel = np.array([[-1, 0, 1], [-2, 0, 2], [-1, 0, 1]])
print("  -> Трафарет готов.")

# --- Акт 3: Ритуал "Сканирования" (Ручная Свертка) ---
print("\nНачинаю ритуал сканирования образа трафаретом...")
# Вычисляем размеры будущей "Карты Признаков". Она будет чуть меньше оригинала.
output_height = image.shape[0] - kernel.shape[0] + 1
output_width = image.shape[1] - kernel.shape[1] + 1
feature_map = np.zeros((output_height, output_width))

# Начинаем сканировать: двигаем наш "фонарь" (окно 3х3) по всему образу.
for y in range(output_height):
    for x in range(output_width):
        # "Вырезаем" окно из образа, на которое сейчас светит фонарь.
        window = image[y : y + 3, x : x + 3]

        # ГЛАВНАЯ МАГИЯ: Прикладываем "трафарет" к окну.
        # Мы поэлементно умножаем числа в окне на числа в трафарете,
        # а затем суммируем результат. Это и есть операция свертки.
        convolved_value = np.sum(window * kernel)

        # Записываем "яркость вспышки" в нашу Карту Признаков.
        feature_map[y, x] = convolved_value

print("Сканирование завершено.")

# --- Акт 4: Анализ "Карты Признаков" ---
# Нормализуем результат, чтобы его можно было сохранить как картинку.
feature_map_visual = cv2.normalize(
    feature_map, None, 0, 255, cv2.NORM_MINMAX, dtype=cv2.CV_8U
)
cv2.imwrite("feature_map.png", feature_map_visual)
print("\nМагия свершилась! 'Карта Признаков' сохранена в 'feature_map.png'.")
print(
    "Открой ее и обрати внимание, как ярко подсвечена именно та область, где в оригинале была вертикальная линия."
)
