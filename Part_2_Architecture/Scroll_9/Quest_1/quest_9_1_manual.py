# === quest_9_1_manual.py ===
# Имя этого пергамента, хранящего ритуал постижения сути градиентного спуска.
# Квест: 9.1 - Версия "Истинный Ручной Режим"
# Каноническое имя Квеста, как оно записано в Великом Кодексе.
# Цель: Понять магию градиентного спуска ("пристрелки"), реализовав
# Священная цель нашего ритуала.
# ее на простых числах.
# Указание, что мы будем работать с простейшими сущностями.

# --- Легенда Квеста: Аналогия с "Магическим Луком" ---
# Здесь начинается Легенда, объясняющая суть магии, которую мы сейчас сотворим.
# Представь, что у нас есть лук, который должен всегда попадать в отметку "5".
# Это — слова из Великого Кодекса, описывающие нашу задачу.
# У лука есть две "настроечные руны":
# Кодекс указывает на два рычага управления нашей магией.
#  1. w (Сила Натяжения)
# Первая руна — 'w', отвечающая за мощь выстрела.
#  2. b (Поправка на Ветер)
# Вторая руна — 'b', отвечающая за тонкую коррекцию.
# Наша задача - "пристрелять" лук, т.е. правильно настроить эти руны,
# Кодекс ставит перед нами ясную цель.
# делая выстрелы и корректируя настройки после каждого промаха.
# Описание метода достижения цели.
# Этот скрипт - это ручная симуляция такой "пристрелки".
# И предупреждает, что мы будем творить эту магию своими руками.

# --- Акт 1: Подготовка к Ритуалу ---
# Начинается первый акт: мы готовим все необходимое для ритуала 'Пристрелки'.

# Здесь мы определяем начальные условия нашего ритуала.
# Исходные данные:
# Толкование следующей руны.
# Наша эталонная "мишень", куда мы целимся.
# Мы устанавливаем позицию нашей 'мишени' на отметке 2.0.
x = 2.0
# Толкование следующей руны.
# "Центр мишени", истинное значение, в которое мы должны попасть.
# Мы определяем 'центр мишени', идеальное попадание, на отметке 5.0.
y = 5.0

# Толкование следующих рун.
# "Руны" на нашем луке, изначально сбиты на ноль.
# Мы устанавливаем начальное значение 'Силы Натяжения' на ноль.
w = 0.0
# Мы устанавливаем начальное значение 'Поправки на Ветер' на ноль.
b = 0.0

# Толкование следующей руны.
# "Скорость обучения" - насколько сильно мы поворачиваем "руны" за один раз.
# Мы устанавливаем 'Скорость Обучения' — это определяет, насколько
# решительно мы будем крутить 'руны' после каждого промаха.
learning_rate = 0.01

# Мы оглашаем на кристалл (консоль) начальное состояние нашего 'Лука'.
print("Начальная калибровка Лука: w=0.0, b=0.0")
# Мы оглашаем нашу священную цель.
print(f"Цель: для мишени x={x} попасть в центр y={y}")
# Мы чертим на кристалле разделительную линию, отделяя подготовку от
# самого ритуала.
print("-" * 30)

# --- Акт 2: Ритуал "Пристрелки" (15 выстрелов) ---
# Начинается второй, кульминационный акт: сам ритуал 'Пристрелки'.
# Мы запускаем ритуальный цикл, который повторится 15 раз — это будет 15
# наших 'выстрелов'.
for epoch in range(15):
    # --- Шаг 1: Выстрел (Прямой проход) ---
    # Первый шаг каждого 'выстрела': мы совершаем предсказание.
    # Толкование следующего заклинания.
    # Делаем выстрел по формуле: попадание = (мишень * сила_натяжения) + поправка_на_ветер
    # Мы вычисляем точку попадания, используя текущие настройки 'Лука'.
    y_predicted = w * x + b

    # --- Шаг 2: Измерение "Промаха" (Ошибка / Loss) ---
    # Второй шаг: мы измеряем, насколько мы промахнулись.
    # Толкование следующего заклинания.
    # Считаем, насколько далеко стрела от центра мишени.
    # Мы вычисляем 'промах' (ошибку) — квадрат разницы между попаданием и
    # центром мишени.
    loss = (y_predicted - y) ** 2

    # --- Шаг 3: "Магический Шепот" (Вычисление Градиентов) ---
    # Третий, самый магический шаг: мы слушаем 'шепот' ошибки.
    # Лук волшебным образом "шепчет" нам, как именно нужно подкрутить руны,
    # Толкование сути этого шага.
    # чтобы следующий выстрел был точнее. Это и есть backpropagation.
    # Толкование сути этого шага.

    # Кодекс приводит пример расчетов для первого выстрела, чтобы мы могли свериться.
    # ПРИМЕР РАСЧЕТА ДЛЯ ПЕРВОГО ВЫСТРЕЛА (epoch=1):
    # Начальные условия для примера.
    # y_predicted = 0.0, y = 5.0, x = 2.0
    #
    # Пауза в рассуждениях Кодекса.
    # Первая часть 'шепота': общая сила и направление промаха.
    # 1. grad_y_predicted (общая сила промаха) = 2 * (0.0 - 5.0) = -10.0
    #
    # Пауза в рассуждениях Кодекса.
    # Вторая часть 'шепота': как именно нужно изменить 'Силу Натяжения'.
    # 2. grad_w (шепот для 'w') = общая_сила_промаха * влияние_мишени
    # Расшифровка формулы 'шепота' для 'w'.
    #                          = -10.0 * 2.0 = -20.0
    # Пример вычисления.
    #    (Шепот: "Нужно ОЧЕНЬ СИЛЬНО увеличить натяжение!")
    # Толкование этого 'шепота' на языке магии.
    #
    # Пауза в рассуждениях Кодекса.
    # Третья часть 'шепота': как именно нужно изменить 'Поправку на Ветер'.
    # 3. grad_b (шепот для 'b') = общая_сила_промаха * 1
    # Расшифровка формулы 'шепота' для 'b'.
    #                          = -10.0 * 1 = -10.0
    # Пример вычисления.
    #    (Шепот: "Нужно немного увеличить поправку на ветер.")
    # Толкование этого 'шепота' на языке магии.

    # Мы вычисляем 'шепот' для 'Силы Натяжения' — это производная функции
    # потерь по `w`.
    grad_w = 2 * (y_predicted - y) * x
    # Мы вычисляем 'шепот' для 'Поправки на Ветер' — производная функции
    # потерь по `b`.
    grad_b = 2 * (y_predicted - y) * 1

    # --- Шаг 4: Коррекция (Обновление "рун" лука) ---
    # Четвертый шаг: мы физически 'подкручиваем руны'.
    # Толкование сути этого шага.
    # Мы "подкручиваем" руны в сторону, ПРОТИВОПОЛОЖНУЮ шепоту ошибки.

    # Кодекс приводит пример расчетов для коррекции.
    # ПРИМЕР РАСЧЕТА ДЛЯ ПЕРВОГО ВЫСТРЕЛА:
    # Пример вычисления для 'w'.
    # w = 0.0 - 0.01 * (-20.0) = 0.2
    # Пример вычисления для 'b'.
    # b = 0.0 - 0.01 * (-10.0) = 0.1

    # Мы обновляем 'Силу Натяжения', двигаясь в сторону, противоположную
    # 'шепоту', с силой, равной 'Скорости Обучения'.
    w = w - learning_rate * grad_w
    # Мы обновляем 'Поправку на Ветер' по тому же принципу.
    b = b - learning_rate * grad_b

    # --- Отчет о выстреле ---
    # Пятый шаг: мы записываем результат выстрела в Летопись.
    # Мы выводим на кристалл полный отчет о текущем выстреле.
    print(
        # Форматированная строка для вывода всех параметров выстрела.
        f"Выстрел {epoch + 1}: Попадание={y_predicted:.4f}, Промах={loss:.4f}, w={w:.4f}, b={b:.4f}"
    )

# --- Акт 3: Финальный Результат ---
# Начинается финальный акт: мы подводим итоги ритуала.
# Мы чертим на кристалле финальную разделительную линию.
print("-" * 30)
# Мы оглашаем финальные, откалиброванные настройки нашего 'Лука'.
print(f"Финальная калибровка Лука: w={w:.4f}, b={b:.4f}")
# Мы делаем контрольный выстрел с новыми настройками и оглашаем результат.
print(f"Финальный выстрел по мишени x={x}: {(w * x + b):.4f}")
